from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QPlainTextDocumentLayout
import sys
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from itertools import count
import random
import numpy as np
from numpy.fft import fft,fftfreq,ifft






n = 1000
lx=100
omg = 2.0* np.pi/lx

x=np.linspace(0,lx,n)
y1=1.0*np.cos(5.0*omg*x)
y2=1.5*np.sin(10.0*omg*x)
y3=2.0*np.sin(20.0*omg*x)

y =y1+y2+y3

freqs = fftfreq(n)

mask = freqs > 0

fft_vals = fft(y)

fft_theo = 2.0*np.abs(fft_vals/n)

index = count()






class MyWindow(QMainWindow):
    def __init__(self):
        super(MyWindow,self).__init__()
        self.initUI()


    def b1_clicked(self):
        print("clicked")
        
        if next(index)%2  == 0:
            plt.close()
            plt.figure(1)
            plt.plot(x, y)
            plt.legend()
            plt.show()
            plt.cool()

            self.b1.setText("close")
        else:
            plt.close()
            self.b1.setText("open")

    def b2_clicked(self):
        print("fft")
        # ani = FuncAnimation(plt.gcf(), animate, interval=50)


        if next(index)%2  == 0:
            plt.close()
            plt.figure(2)
            plt.plot(freqs[mask], fft_theo[mask], label="true fft values")
            plt.show()

            self.b2.setText("close fourier transform")
        else:
            plt.close()
            self.b2.setText("open fourier transform")
    def initUI(self):
        self.setGeometry(200, 200, 300, 300)
        self.setWindowTitle("signal viewer")


        self.b1 = QtWidgets.QPushButton(self)
        self.b1.setText("start the signal")
        self.b1.clicked.connect(self.b1_clicked)



        self.b2 = QtWidgets.QPushButton(self)
        self.b2.move(0,40)
        self.b2.setText("fourier transform")
        self.b2.clicked.connect(self.b2_clicked)





def window():
    app = QApplication(sys.argv)
    win = MyWindow()
    win.show()
    sys.exit(app.exec_())

window()

